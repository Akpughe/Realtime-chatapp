{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\n\nvar ChatMessage = /*#__PURE__*/function (_Component) {\n  _inherits(ChatMessage, _Component);\n\n  function ChatMessage() {\n    _classCallCheck(this, ChatMessage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ChatMessage).apply(this, arguments));\n  }\n\n  _createClass(ChatMessage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$position = _this$props.position,\n          position = _this$props$position === void 0 ? 'left' : _this$props$position,\n          message = _this$props.message;\n      var isRight = position.toLowerCase() === 'right';\n      var align = isRight ? 'text-right' : 'text-left';\n      var justify = isRight ? 'justify-content-end' : 'justify-content-start';\n      var messageBoxStyles = {\n        maxWidth: '70%',\n        flexGrow: 0\n      };\n      var messageStyles = {\n        fontWeight: 500,\n        lineHeight: 1.4,\n        whiteSpace: 'pre-wrap'\n      };\n      return __jsx(\"div\", {\n        className: \"w-100 my-1 d-flex \".concat(justify)\n      }, __jsx(\"div\", {\n        className: \"bg-light rounded border border-gray p-2\",\n        style: messageBoxStyles\n      }, __jsx(\"span\", {\n        className: \"d-block text-secondary \".concat(align),\n        style: messageStyles\n      }, message)));\n    }\n  }]);\n\n  return ChatMessage;\n}(Component);\n\nexport default ChatMessage;","map":{"version":3,"sources":["C:/Users/DAVID/Documents/realtime-chat-app/components/ChatMessage.js"],"names":["React","Component","ChatMessage","props","position","message","isRight","toLowerCase","align","justify","messageBoxStyles","maxWidth","flexGrow","messageStyles","fontWeight","lineHeight","whiteSpace"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,W;;;;;;;;;;;6BACK;AAAA,wBACgC,KAAKC,KADrC;AAAA,6CACCC,QADD;AAAA,UACCA,QADD,qCACY,MADZ;AAAA,UACoBC,OADpB,eACoBA,OADpB;AAEP,UAAMC,OAAO,GAAGF,QAAQ,CAACG,WAAT,OAA2B,OAA3C;AAEA,UAAMC,KAAK,GAAGF,OAAO,GAAG,YAAH,GAAkB,WAAvC;AACA,UAAMG,OAAO,GAAGH,OAAO,GAAG,qBAAH,GAA2B,uBAAlD;AAEA,UAAMI,gBAAgB,GAAG;AACvBC,QAAAA,QAAQ,EAAE,KADa;AAEvBC,QAAAA,QAAQ,EAAE;AAFa,OAAzB;AAKA,UAAMC,aAAa,GAAG;AACpBC,QAAAA,UAAU,EAAE,GADQ;AAEpBC,QAAAA,UAAU,EAAE,GAFQ;AAGpBC,QAAAA,UAAU,EAAE;AAHQ,OAAtB;AAMA,aACE;AAAK,QAAA,SAAS,8BAAuBP,OAAvB;AAAd,SACE;AACE,QAAA,SAAS,EAAC,yCADZ;AAEE,QAAA,KAAK,EAAEC;AAFT,SAIE;AACE,QAAA,SAAS,mCAA4BF,KAA5B,CADX;AAEE,QAAA,KAAK,EAAEK;AAFT,SAIGR,OAJH,CAJF,CADF,CADF;AAeD;;;;EAlCuBJ,S;;AAqC1B,eAAeC,WAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ChatMessage extends Component {\r\n  render() {\r\n    const { position = 'left', message } = this.props;\r\n    const isRight = position.toLowerCase() === 'right';\r\n\r\n    const align = isRight ? 'text-right' : 'text-left';\r\n    const justify = isRight ? 'justify-content-end' : 'justify-content-start';\r\n\r\n    const messageBoxStyles = {\r\n      maxWidth: '70%',\r\n      flexGrow: 0\r\n    };\r\n\r\n    const messageStyles = {\r\n      fontWeight: 500,\r\n      lineHeight: 1.4,\r\n      whiteSpace: 'pre-wrap'\r\n    };\r\n\r\n    return (\r\n      <div className={`w-100 my-1 d-flex ${justify}`}>\r\n        <div\r\n          className=\"bg-light rounded border border-gray p-2\"\r\n          style={messageBoxStyles}\r\n        >\r\n          <span\r\n            className={`d-block text-secondary ${align}`}\r\n            style={messageStyles}\r\n          >\r\n            {message}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatMessage;\r\n"]},"metadata":{},"sourceType":"module"}